# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
workflows:
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/

jobs:
  build:
    docker:
      - image: circleci/python:3.7.3
        environment: # environment variables for primary container
          PIPENV_VENV_IN_PROJECT: true

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            pipenv install --dev
            pipenv run python -m spacy download en_core_web_sm

      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"

      # run tests!
      - run:
          name: run tests
          command: |
            pipenv run pytest -m "not dbtest" --junitxml=junit/test-results.xml --cov=piicatcher --cov-report=xml --cov-report=html tests/
      
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - codecov/upload:
          file: coverage.xml

  deploy:
    docker:
      - image: circleci/python:3.7.3
    steps:
      - checkout
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            pipenv install --dev
            pipenv run python -m spacy download en_core_web_sm
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"

      - run:
          name: verify git tag vs. version
          command: |
            pipenv run python setup.py verify

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            pipenv run python setup.py sdist bdist_wheel

      - run:
          name: upload to pypi
          command: |
            pipenv run twine upload dist/*
